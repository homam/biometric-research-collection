{"version":3,"sources":["src/NOW.ts","src/log.ts","src/header.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","../../src/helper.ts","../../src/types.ts","../../src/FunctionsClient.ts","../../src/index.ts","../../src/PostgrestBuilder.ts","../../src/PostgrestTransformBuilder.ts","../../src/PostgrestFilterBuilder.ts","../../src/PostgrestQueryBuilder.ts","../../src/version.ts","../../src/constants.ts","../../src/PostgrestClient.ts","node_modules/es5-ext/global.js","node_modules/websocket/package.json","node_modules/websocket/lib/version.js","node_modules/websocket/lib/browser.js","../../../src/lib/version.ts","../../../src/lib/constants.ts","../../../src/lib/timer.ts","../../../src/lib/serializer.ts","../../../src/lib/push.ts","../../src/RealtimePresence.ts","../../../src/lib/transformers.ts","../../src/RealtimeChannel.ts","../../src/RealtimeClient.ts","../../../src/lib/errors.ts","../../../src/lib/helpers.ts","../../../src/lib/fetch.ts","../../../src/packages/StorageFileApi.ts","../../../src/packages/StorageBucketApi.ts","../../src/StorageClient.ts","../../src/GoTrueAdminApi.ts","../../../src/lib/local-storage.ts","../../../src/lib/polyfills.ts","../../src/GoTrueClient.ts","../../../src/lib/SupabaseAuthClient.ts","../../src/SupabaseClient.ts","src/telemetry.ts","src/send.ts","src/start.ts","src/devicemotion.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js","node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","naiveFallback","self","window","globalThis","Object","defineProperty","get","configurable","error","__global__","version","_globalThis","_typeof","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance","forEach","prop","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","cached","cache","some","cb","loadJSBundle","script","async","charset","src","onerror","getElementsByTagName"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const NOW = new Date().valueOf();\n","const logElement = document.getElementById(\"logElement\") as HTMLElement;\nexport function log(msg: string) {\n  logElement.innerHTML = msg + \"\\n\" + logElement.innerHTML;\n}\n","document.getElementById(\"channelNameForm\")?.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault();\n  localStorage.setItem(\n    \"channelName\",\n    (document.getElementById(\"channelName\") as HTMLInputElement).value\n  );\n  window.location.reload();\n});\n(document.getElementById(\"channelName\") as HTMLInputElement).value =\n  localStorage.getItem(\"channelName\") || \"\";\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import { Fetch } from './types'\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","export type Fetch = typeof fetch\n\n/**\n * Response format\n *\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    super.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * Object representing the headers to send with the request.\n   * */\n  headers?: { [key: string]: string }\n  /**\n   * The HTTP verb of the request\n   */\n  method?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n  /**\n   * The body of the request.\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n}\n","import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs } = options\n\n      let _headers: Record<string, string> = {}\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n","export { FunctionsClient } from './FunctionsClient'\nexport {\n  FunctionInvokeOptions,\n  FunctionsError,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n} from './types'\n","import crossFetch from 'cross-fetch'\n\nimport type { Fetch, PostgrestSingleResponse } from './types'\n\nexport default abstract class PostgrestBuilder<Result>\n  implements PromiseLike<PostgrestSingleResponse<Result>>\n{\n  protected method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url: URL\n  protected headers: Record<string, string>\n  protected schema?: string\n  protected body?: unknown\n  protected shouldThrowOnError = false\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected isMaybeSingle: boolean\n\n  constructor(builder: PostgrestBuilder<Result>) {\n    this.method = builder.method\n    this.url = builder.url\n    this.headers = builder.headers\n    this.schema = builder.schema\n    this.body = builder.body\n    this.shouldThrowOnError = builder.shouldThrowOnError\n    this.signal = builder.signal\n    this.isMaybeSingle = builder.isMaybeSingle\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = crossFetch\n    } else {\n      this.fetch = fetch\n    }\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(): this {\n    this.shouldThrowOnError = true\n    return this\n  }\n\n  then<TResult1 = PostgrestSingleResponse<Result>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: PostgrestSingleResponse<Result>) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema\n    } else {\n      this.headers['Content-Profile'] = this.schema\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json'\n    }\n\n    // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n    const _fetch = this.fetch\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count: number | null = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = await res.text()\n          if (body === '') {\n            // Prefer: return=minimal\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = body\n          } else if (\n            this.headers['Accept'] &&\n            this.headers['Accept'].includes('application/vnd.pgrst.plan+text')\n          ) {\n            data = body\n          } else {\n            data = JSON.parse(body)\n          }\n        }\n\n        const countHeader = this.headers['Prefer']?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n          if (data.length > 1) {\n            error = {\n              // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n              code: 'PGRST116',\n              details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n              hint: null,\n              message: 'JSON object requested, multiple (or no) rows returned',\n            }\n            data = null\n            count = null\n            status = 406\n            statusText = 'Not Acceptable'\n          } else if (data.length === 1) {\n            data = data[0]\n          } else {\n            data = null\n          }\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (Array.isArray(error) && res.status === 404) {\n            data = []\n            error = null\n            status = 200\n            statusText = 'OK'\n          }\n        } catch {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204\n            statusText = 'No Content'\n          } else {\n            error = {\n              message: body,\n            }\n          }\n        }\n\n        if (error && this.isMaybeSingle && error?.details?.includes('Results contain 0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `${fetchError?.name ?? 'FetchError'}: ${fetchError?.message}`,\n          details: `${fetchError?.stack ?? ''}`,\n          hint: '',\n          code: `${fetchError?.code ?? ''}`,\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: '',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport { GetResult } from './select-query-parser'\nimport { GenericSchema } from './types'\n\nexport default class PostgrestTransformBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  Relationships = unknown\n> extends PostgrestBuilder<Result> {\n  /**\n   * Perform a SELECT on the query result.\n   *\n   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n   * return modified rows. By calling this method, modified rows are returned in\n   * `data`.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   */\n  select<Query extends string = '*', NewResultOne = GetResult<Schema, Row, Relationships, Query>>(\n    columns?: Query\n  ): PostgrestTransformBuilder<Schema, Row, NewResultOne[], Relationships> {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (this.headers['Prefer']) {\n      this.headers['Prefer'] += ','\n    }\n    this.headers['Prefer'] += 'return=representation'\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResultOne[], Relationships>\n  }\n\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: undefined }\n  ): this\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable: string }\n  ): this\n  /**\n   * Order the query result by `column`.\n   *\n   * You can call this method multiple times to order by multiple columns.\n   *\n   * You can order foreign tables, but it doesn't affect the ordering of the\n   * current table.\n   *\n   * @param column - The column to order by\n   * @param options - Named parameters\n   * @param options.ascending - If `true`, the result will be in ascending order\n   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n   * `null`s appear last.\n   * @param options.foreignTable - Set this to order a foreign table by foreign\n   * columns\n   */\n  order(\n    column: string,\n    {\n      ascending = true,\n      nullsFirst,\n      foreignTable,\n    }: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string } = {}\n  ): this {\n    const key = foreignTable ? `${foreignTable}.order` : 'order'\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${\n        nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limit the query result by `count`.\n   *\n   * @param count - The maximum number of rows to return\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  limit(count: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limit the query result by `from` and `to` inclusively.\n   *\n   * @param from - The starting index from which to limit the result\n   * @param to - The last index to which to limit the result\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  range(from: number, to: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`\n    const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Set the AbortSignal for the fetch request.\n   *\n   * @param signal - The AbortSignal to use for the fetch request\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n   * returns an error.\n   */\n  single<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    return this as PostgrestBuilder<ResultOne>\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n   * this returns an error.\n   */\n  maybeSingle<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne | null> {\n    // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n    // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n    if (this.method === 'GET') {\n      this.headers['Accept'] = 'application/json'\n    } else {\n      this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    }\n    this.isMaybeSingle = true\n    return this as PostgrestBuilder<ResultOne | null>\n  }\n\n  /**\n   * Return `data` as a string in CSV format.\n   */\n  csv(): PostgrestBuilder<string> {\n    this.headers['Accept'] = 'text/csv'\n    return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n   */\n  geojson(): PostgrestBuilder<Record<string, unknown>> {\n    this.headers['Accept'] = 'application/geo+json'\n    return this as PostgrestBuilder<Record<string, unknown>>\n  }\n\n  /**\n   * Return `data` as the EXPLAIN plan for the query.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.analyze - If `true`, the query will be executed and the\n   * actual run time will be returned\n   *\n   * @param options.verbose - If `true`, the query identifier will be returned\n   * and `data` will include the output columns of the query\n   *\n   * @param options.settings - If `true`, include information on configuration\n   * parameters that affect query planning\n   *\n   * @param options.buffers - If `true`, include information on buffer usage\n   *\n   * @param options.wal - If `true`, include information on WAL record generation\n   *\n   * @param options.format - The format of the output, can be `\"text\"` (default)\n   * or `\"json\"`\n   */\n  explain({\n    analyze = false,\n    verbose = false,\n    settings = false,\n    buffers = false,\n    wal = false,\n    format = 'text',\n  }: {\n    analyze?: boolean\n    verbose?: boolean\n    settings?: boolean\n    buffers?: boolean\n    wal?: boolean\n    format?: 'json' | 'text'\n  } = {}): PostgrestBuilder<Record<string, unknown>[]> | PostgrestBuilder<string> {\n    const options = [\n      analyze ? 'analyze' : null,\n      verbose ? 'verbose' : null,\n      settings ? 'settings' : null,\n      buffers ? 'buffers' : null,\n      wal ? 'wal' : null,\n    ]\n      .filter(Boolean)\n      .join('|')\n    // An Accept header can carry multiple media types but postgrest-js always sends one\n    const forMediatype = this.headers['Accept']\n    this.headers[\n      'Accept'\n    ] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`\n    if (format === 'json') return this as PostgrestBuilder<Record<string, unknown>[]>\n    else return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Rollback the query.\n   *\n   * `data` will still be returned, but the query is not committed.\n   */\n  rollback(): this {\n    if ((this.headers['Prefer'] ?? '').trim().length > 0) {\n      this.headers['Prefer'] += ',tx=rollback'\n    } else {\n      this.headers['Prefer'] = 'tx=rollback'\n    }\n    return this\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   */\n  returns<NewResult>(): PostgrestTransformBuilder<Schema, Row, NewResult, Relationships> {\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResult, Relationships>\n  }\n}\n","import PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport { GenericSchema } from './types'\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n\nexport default class PostgrestFilterBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  Relationships = unknown\n> extends PostgrestTransformBuilder<Schema, Row, Result, Relationships> {\n  eq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  eq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is equal to `value`.\n   *\n   * To check if the value of `column` is NULL, you should use `.is()` instead.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  eq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `eq.${value}`)\n    return this\n  }\n\n  neq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  neq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is not equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  neq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `neq.${value}`)\n    return this\n  }\n\n  gt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gt.${value}`)\n    return this\n  }\n\n  gte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gte.${value}`)\n    return this\n  }\n\n  lt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lt.${value}`)\n    return this\n  }\n\n  lte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lte.${value}`)\n    return this\n  }\n\n  like<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  like(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  like(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `like.${pattern}`)\n    return this\n  }\n\n  likeAllOf<ColumnName extends string & keyof Row>(column: ColumnName, patterns: string[]): this\n  likeAllOf(column: string, patterns: string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAllOf(column: string, patterns: string[]): this {\n    this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  likeAnyOf<ColumnName extends string & keyof Row>(column: ColumnName, patterns: string[]): this\n  likeAnyOf(column: string, patterns: string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAnyOf(column: string, patterns: string[]): this {\n    this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilike<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  ilike(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  ilike(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `ilike.${pattern}`)\n    return this\n  }\n\n  ilikeAllOf<ColumnName extends string & keyof Row>(column: ColumnName, patterns: string[]): this\n  ilikeAllOf(column: string, patterns: string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAllOf(column: string, patterns: string[]): this {\n    this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilikeAnyOf<ColumnName extends string & keyof Row>(column: ColumnName, patterns: string[]): this\n  ilikeAnyOf(column: string, patterns: string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAnyOf(column: string, patterns: string[]): this {\n    this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  is<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: Row[ColumnName] & (boolean | null)\n  ): this\n  is(column: string, value: boolean | null): this\n  /**\n   * Match only rows where `column` IS `value`.\n   *\n   * For non-boolean columns, this is only relevant for checking if the value of\n   * `column` is NULL by setting `value` to `null`.\n   *\n   * For boolean columns, you can also set `value` to `true` or `false` and it\n   * will behave the same way as `.eq()`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  is(column: string, value: boolean | null): this {\n    this.url.searchParams.append(column, `is.${value}`)\n    return this\n  }\n\n  in<ColumnName extends string & keyof Row>(column: ColumnName, values: Row[ColumnName][]): this\n  in(column: string, values: unknown[]): this\n  /**\n   * Match only rows where `column` is included in the `values` array.\n   *\n   * @param column - The column to filter on\n   * @param values - The values array to filter with\n   */\n  in(column: string, values: unknown[]): this {\n    const cleanedValues = values\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(column, `in.(${cleanedValues})`)\n    return this\n  }\n\n  contains<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * `column` contains every element appearing in `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(column, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  containedBy<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * every element appearing in `column` is contained by `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  rangeGt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is greater than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sr.${range}`)\n    return this\n  }\n\n  rangeGte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or greater than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxl.${range}`)\n    return this\n  }\n\n  rangeLt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is less than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sl.${range}`)\n    return this\n  }\n\n  rangeLte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or less than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxr.${range}`)\n    return this\n  }\n\n  rangeAdjacent<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeAdjacent(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where `column` is\n   * mutually exclusive to `range` and there can be no element between the two\n   * ranges.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeAdjacent(column: string, range: string): this {\n    this.url.searchParams.append(column, `adj.${range}`)\n    return this\n  }\n\n  overlaps<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][]\n  ): this\n  overlaps(column: string, value: string | unknown[]): this\n  /**\n   * Only relevant for array and range columns. Match only rows where\n   * `column` and `value` have an element in common.\n   *\n   * @param column - The array or range column to filter on\n   * @param value - The array or range value to filter with\n   */\n  overlaps(column: string, value: string | unknown[]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(column, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  textSearch<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  textSearch(\n    column: string,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  /**\n   * Only relevant for text and tsvector columns. Match only rows where\n   * `column` matches the query string in `query`.\n   *\n   * @param column - The text or tsvector column to filter on\n   * @param query - The query text to match with\n   * @param options - Named parameters\n   * @param options.config - The text search configuration to use\n   * @param options.type - Change how the `query` text is interpreted\n   */\n  textSearch(\n    column: string,\n    query: string,\n    { config, type }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  match<ColumnName extends string & keyof Row>(query: Record<ColumnName, Row[ColumnName]>): this\n  match(query: Record<string, unknown>): this\n  /**\n   * Match only rows where each column in `query` keys is equal to its\n   * associated value. Shorthand for multiple `.eq()`s.\n   *\n   * @param query - The object to filter with, with column names as keys mapped\n   * to their filter values\n   */\n  match(query: Record<string, unknown>): this {\n    Object.entries(query).forEach(([column, value]) => {\n      this.url.searchParams.append(column, `eq.${value}`)\n    })\n    return this\n  }\n\n  not<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: FilterOperator,\n    value: Row[ColumnName]\n  ): this\n  not(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which doesn't satisfy the filter.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to be negated to filter with, following\n   * PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  not(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows which satisfy at least one of the filters.\n   *\n   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure it's properly sanitized.\n   *\n   * It's currently not possible to do an `.or()` filter across multiple tables.\n   *\n   * @param filters - The filters to use, following PostgREST syntax\n   * @param foreignTable - Set this to filter on foreign tables instead of the\n   * current table\n   */\n  or(filters: string, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = foreignTable ? `${foreignTable}.or` : 'or'\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  filter<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: `${'' | 'not.'}${FilterOperator}`,\n    value: unknown\n  ): this\n  filter(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which satisfy the filter. This is an escape hatch - you\n   * should use the specific filter methods wherever possible.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to filter with, following PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  filter(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `${operator}.${value}`)\n    return this\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser'\nimport { Fetch, GenericSchema, GenericTable, GenericView } from './types'\n\nexport default class PostgrestQueryBuilder<\n  Schema extends GenericSchema,\n  Relation extends GenericTable | GenericView,\n  Relationships = Relation extends { Relationships: infer R } ? R : unknown\n> {\n  url: URL\n  headers: Record<string, string>\n  schema?: string\n  signal?: AbortSignal\n  fetch?: Fetch\n\n  constructor(\n    url: URL,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: string\n      fetch?: Fetch\n    }\n  ) {\n    this.url = url\n    this.headers = headers\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  /**\n   * Perform a SELECT query on the table or view.\n   *\n   * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n   *\n   * @param options - Named parameters\n   *\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   *\n   * @param options.count - Count algorithm to use to count rows in the table or view.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  select<\n    Query extends string = '*',\n    ResultOne = GetResult<Schema, Relation['Row'], Relationships, Query>\n  >(\n    columns?: Query,\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], ResultOne[], Relationships> {\n    const method = head ? 'HEAD' : 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (count) {\n      this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<ResultOne[]>)\n  }\n\n  /**\n   * Perform an INSERT into the table or view.\n   *\n   * By default, inserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to insert. Pass an object to insert a single row\n   * or an array to insert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count inserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column.\n   */\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      count,\n      defaultToNull = true,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null, Relationships> {\n    const method = 'POST'\n\n    const prefersHeaders = []\n    if (this.headers['Prefer']) {\n      prefersHeaders.push(this.headers['Prefer'])\n    }\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (!defaultToNull) {\n      prefersHeaders.push('missing=default')\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPSERT on the table or view. Depending on the column(s) passed\n   * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n   * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n   * exist, or if it does exist, perform an alternative action depending on\n   * `ignoreDuplicates`.\n   *\n   * By default, upserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to upsert with. Pass an object to upsert a\n   * single row or an array to upsert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n   * duplicate rows are determined. Two rows are duplicates if all the\n   * `onConflict` columns are equal.\n   *\n   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n   * `false`, duplicate rows are merged with existing rows.\n   *\n   * @param options.count - Count algorithm to use to count upserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column. This only applies when\n   * inserting new rows, not when merging with existing rows under\n   * `ignoreDuplicates: false`.\n   */\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      onConflict,\n      ignoreDuplicates = false,\n      count,\n      defaultToNull = true,\n    }: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null, Relationships> {\n    const method = 'POST'\n\n    const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`]\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    if (this.headers['Prefer']) {\n      prefersHeaders.push(this.headers['Prefer'])\n    }\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (!defaultToNull) {\n      prefersHeaders.push('missing=default')\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPDATE on the table or view.\n   *\n   * By default, updated rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param values - The values to update with\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count updated rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  update<Row extends Relation extends { Update: unknown } ? Relation['Update'] : never>(\n    values: Row,\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null, Relationships> {\n    const method = 'PATCH'\n    const prefersHeaders = []\n    if (this.headers['Prefer']) {\n      prefersHeaders.push(this.headers['Prefer'])\n    }\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform a DELETE on the table or view.\n   *\n   * By default, deleted rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count deleted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  delete({\n    count,\n  }: {\n    count?: 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<Schema, Relation['Row'], null, Relationships> {\n    const method = 'DELETE'\n    const prefersHeaders = []\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n}\n","export const version = '1.7.0'\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` }\n","import PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport PostgrestBuilder from './PostgrestBuilder'\nimport { DEFAULT_HEADERS } from './constants'\nimport { Fetch, GenericSchema } from './types'\n\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  url: string\n  headers: Record<string, string>\n  schema?: SchemaName\n  fetch?: Fetch\n\n  // TODO: Add back shouldThrowOnError once we figure out the typings\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url - URL of the PostgREST endpoint\n   * @param options - Named parameters\n   * @param options.headers - Custom headers\n   * @param options.schema - Postgres schema to switch to\n   * @param options.fetch - Custom fetch\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: SchemaName\n      fetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    const url = new URL(`${this.url}/${relation}`)\n    return new PostgrestQueryBuilder<Schema, any>(url, {\n      headers: { ...this.headers },\n      schema: this.schema,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    let method: 'HEAD' | 'POST'\n    const url = new URL(`${this.url}/rpc/${fn}`)\n    let body: unknown | undefined\n    if (head) {\n      method = 'HEAD'\n      Object.entries(args).forEach(([name, value]) => {\n        url.searchParams.append(name, `${value}`)\n      })\n    } else {\n      method = 'POST'\n      body = args\n    }\n\n    const headers = { ...this.headers }\n    if (count) {\n      headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url,\n      headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<Function_['Returns']>)\n  }\n}\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","module.exports = {\n  \"name\": \"websocket\",\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"author\": \"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)\",\n  \"contributors\": [\n    \"Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)\"\n  ],\n  \"version\": \"1.0.34\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"bufferutil\": \"^4.0.1\",\n    \"debug\": \"^2.2.0\",\n    \"es5-ext\": \"^0.10.50\",\n    \"typedarray-to-buffer\": \"^3.1.5\",\n    \"utf-8-validate\": \"^5.0.2\",\n    \"yaeti\": \"^0.0.6\"\n  },\n  \"devDependencies\": {\n    \"buffer-equal\": \"^1.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"jshint\": \"^2.0.0\",\n    \"tape\": \"^4.9.1\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"scripts\": {\n    \"test\": \"tape test/unit/*.js\",\n    \"gulp\": \"gulp\"\n  },\n  \"main\": \"index\",\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"license\": \"Apache-2.0\"\n}\n;","module.exports = require('../package.json').version;\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","export const version = '2.7.2'\n","import { version } from './version'\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` }\n\nexport const VSN: string = '1.0.0'\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(public callback: Function, public timerCalc: Function) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: { [key: string]: any }\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(\n      decoder.decode(buffer.slice(offset, buffer.byteLength))\n    )\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n","import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport type RealtimeChannel from '../RealtimeChannel'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: { [key: string]: any }\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n  rateLimited: boolean = false\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: any } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    const status = this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef(),\n    })\n    if (status === 'rate limited') {\n      this.rateLimited = true\n    }\n  }\n\n  updatePayload(payload: { [key: string]: any }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket._makeRef()\n    this.refEvent = this.channel._replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel._on(this.refEvent, {}, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent)\n      this.channel._trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel._off(this.refEvent, {})\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport type {\n  PresenceOpts,\n  PresenceOnJoinCallback,\n  PresenceOnLeaveCallback,\n} from 'phoenix'\nimport type RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState<T extends { [key: string]: any } = {}> = {\n  [key: string]: Presence<T>[]\n}\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(public channel: RealtimeChannel, opts?: PresenceOpts) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(\n        this.state,\n        newState,\n        onJoin,\n        onLeave\n      )\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresenceRefs = currentPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map(\n        (m: Presence) => m.presence_ref\n      )\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(\n    obj: RealtimePresenceState,\n    func: PresenceChooser<T>\n  ): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n","/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport type RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence, {\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n} from './RealtimePresence'\nimport type {\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n} from './RealtimePresence'\nimport * as Transformers from './lib/transformers'\n\nexport type RealtimeChannelOptions = {\n  config: {\n    /**\n     * self option enables client to receive message it broadcast\n     * ack option instructs server to acknowledge that broadcast message was received\n     */\n    broadcast?: { self?: boolean; ack?: boolean }\n    /**\n     * key option is used to track presence payload across clients\n     */\n    presence?: { key?: string }\n  }\n}\n\ntype RealtimePostgresChangesPayloadBase = {\n  schema: string\n  table: string\n  commit_timestamp: string\n  errors: string[]\n}\n\nexport type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    new: T\n    old: {}\n  }\n\nexport type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    new: T\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    new: {}\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =\n  | RealtimePostgresInsertPayload<T>\n  | RealtimePostgresUpdatePayload<T>\n  | RealtimePostgresDeletePayload<T>\n\nexport type RealtimePostgresChangesFilter<\n  T extends `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT}`\n> = {\n  /**\n   * The type of database change to listen to.\n   */\n  event: T\n  /**\n   * The database schema to listen to.\n   */\n  schema: string\n  /**\n   * The database table to listen to.\n   */\n  table?: string\n  /**\n   * Receive database changes when filter is matched.\n   */\n  filter?: string\n}\n\nexport type RealtimeChannelSendResponse = 'ok' | 'timed out' | 'rate limited'\n\nexport enum REALTIME_POSTGRES_CHANGES_LISTEN_EVENT {\n  ALL = '*',\n  INSERT = 'INSERT',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport enum REALTIME_LISTEN_TYPES {\n  BROADCAST = 'broadcast',\n  PRESENCE = 'presence',\n  /**\n   * listen to Postgres changes.\n   */\n  POSTGRES_CHANGES = 'postgres_changes',\n}\n\nexport enum REALTIME_SUBSCRIBE_STATES {\n  SUBSCRIBED = 'SUBSCRIBED',\n  TIMED_OUT = 'TIMED_OUT',\n  CLOSED = 'CLOSED',\n  CHANNEL_ERROR = 'CHANNEL_ERROR',\n}\n\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n  bindings: {\n    [key: string]: {\n      type: string\n      filter: { [key: string]: any }\n      callback: Function\n      id?: string\n    }[]\n  } = {}\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n\n  constructor(\n    /** Topic name can be any string. */\n    public topic: string,\n    public params: RealtimeChannelOptions = { config: {} },\n    public socket: RealtimeClient\n  ) {\n    this.params.config = {\n      ...{\n        broadcast: { ack: false, self: false },\n        presence: { key: '' },\n      },\n      ...params.config,\n    }\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this._rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this._onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket._remove(this)\n    })\n    this._onError((reason: string) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this._isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this._trigger(this._replyEventName(ref), payload)\n    })\n\n    this.presence = new RealtimePresence(this)\n  }\n\n  /** Subscribe registers your client with the server */\n  subscribe(\n    callback?: (status: `${REALTIME_SUBSCRIBE_STATES}`, err?: Error) => void,\n    timeout = this.timeout\n  ): RealtimeChannel {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      const {\n        config: { broadcast, presence },\n      } = this.params\n      this._onError((e: Error) => callback && callback('CHANNEL_ERROR', e))\n      this._onClose(() => callback && callback('CLOSED'))\n\n      const accessTokenPayload: { access_token?: string } = {}\n      const config = {\n        broadcast,\n        presence,\n        postgres_changes:\n          this.bindings.postgres_changes?.map((r) => r.filter) ?? [],\n      }\n\n      if (this.socket.accessToken) {\n        accessTokenPayload.access_token = this.socket.accessToken\n      }\n\n      this.updateJoinPayload({ ...{ config }, ...accessTokenPayload })\n\n      this.joinedOnce = true\n      this._rejoin(timeout)\n\n      this.joinPush\n        .receive(\n          'ok',\n          ({\n            postgres_changes: serverPostgresFilters,\n          }: {\n            postgres_changes: {\n              id: string\n              event: string\n              schema?: string\n              table?: string\n              filter?: string\n            }[]\n          }) => {\n            this.socket.accessToken &&\n              this.socket.setAuth(this.socket.accessToken)\n\n            if (serverPostgresFilters === undefined) {\n              callback && callback('SUBSCRIBED')\n              return\n            } else {\n              const clientPostgresBindings = this.bindings.postgres_changes\n              const bindingsLen = clientPostgresBindings?.length ?? 0\n              const newPostgresBindings = []\n\n              for (let i = 0; i < bindingsLen; i++) {\n                const clientPostgresBinding = clientPostgresBindings[i]\n                const {\n                  filter: { event, schema, table, filter },\n                } = clientPostgresBinding\n                const serverPostgresFilter =\n                  serverPostgresFilters && serverPostgresFilters[i]\n\n                if (\n                  serverPostgresFilter &&\n                  serverPostgresFilter.event === event &&\n                  serverPostgresFilter.schema === schema &&\n                  serverPostgresFilter.table === table &&\n                  serverPostgresFilter.filter === filter\n                ) {\n                  newPostgresBindings.push({\n                    ...clientPostgresBinding,\n                    id: serverPostgresFilter.id,\n                  })\n                } else {\n                  this.unsubscribe()\n                  callback &&\n                    callback(\n                      'CHANNEL_ERROR',\n                      new Error(\n                        'mismatch between server and client bindings for postgres changes'\n                      )\n                    )\n                  return\n                }\n              }\n\n              this.bindings.postgres_changes = newPostgresBindings\n\n              callback && callback('SUBSCRIBED')\n              return\n            }\n          }\n        )\n        .receive('error', (error: { [key: string]: any }) => {\n          callback &&\n            callback(\n              'CHANNEL_ERROR',\n              new Error(\n                JSON.stringify(Object.values(error).join(', ') || 'error')\n              )\n            )\n          return\n        })\n        .receive('timeout', () => {\n          callback && callback('TIMED_OUT')\n          return\n        })\n    }\n\n    return this\n  }\n\n  presenceState<\n    T extends { [key: string]: any } = {}\n  >(): RealtimePresenceState<T> {\n    return this.presence.state as RealtimePresenceState<T>\n  }\n\n  async track(\n    payload: { [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'track',\n        payload,\n      },\n      opts.timeout || this.timeout\n    )\n  }\n\n  async untrack(\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'untrack',\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates an event handler that listens to changes.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.SYNC}` },\n    callback: () => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}` },\n    callback: (payload: RealtimePresenceJoinPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}` },\n    callback: (payload: RealtimePresenceLeavePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL}`>,\n    callback: (payload: RealtimePostgresChangesPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`>,\n    callback: (payload: RealtimePostgresInsertPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`>,\n    callback: (payload: RealtimePostgresUpdatePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`>,\n    callback: (payload: RealtimePostgresDeletePayload<T>) => void\n  ): RealtimeChannel\n  /**\n   * The following is placed here to display on supabase.com/docs/reference/javascript/subscribe.\n   * @param type One of \"broadcast\", \"presence\", or \"postgres_changes\".\n   * @param filter Custom object specific to the Realtime feature detailing which payloads to receive.\n   * @param callback Function to be invoked when event handler is triggered.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      [key: string]: any\n    }) => void\n  ): RealtimeChannel\n  on(\n    type: `${REALTIME_LISTEN_TYPES}`,\n    filter: { event: string; [key: string]: string },\n    callback: (payload: any) => void\n  ): RealtimeChannel {\n    return this._on(type, filter, callback)\n  }\n\n  send(\n    payload: { type: string; [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return new Promise((resolve) => {\n      const push = this._push(\n        payload.type,\n        payload,\n        opts.timeout || this.timeout\n      )\n\n      if (push.rateLimited) {\n        resolve('rate limited')\n      }\n\n      if (\n        payload.type === 'broadcast' &&\n        !this.params?.config?.broadcast?.ack\n      ) {\n        resolve('ok')\n      }\n\n      push.receive('ok', () => resolve('ok'))\n      push.receive('timeout', () => resolve('timed out'))\n    })\n  }\n\n  updateJoinPayload(payload: { [key: string]: any }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel.\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout): Promise<'ok' | 'timed out' | 'error'> {\n    this.state = CHANNEL_STATES.leaving\n    const onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef())\n    }\n\n    this.rejoinTimer.reset()\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    return new Promise((resolve) => {\n      const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n\n      leavePush\n        .receive('ok', () => {\n          onClose()\n          resolve('ok')\n        })\n        .receive('timeout', () => {\n          onClose()\n          resolve('timed out')\n        })\n        .receive('error', () => {\n          resolve('error')\n        })\n\n      leavePush.send()\n\n      if (!this._canPush()) {\n        leavePush.trigger('ok', {})\n      }\n    })\n  }\n\n  /** @internal */\n  _push(\n    event: string,\n    payload: { [key: string]: any },\n    timeout = this.timeout\n  ) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this._canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   *\n   * @internal\n   */\n  _onMessage(_event: string, payload: any, _ref?: string) {\n    return payload\n  }\n\n  /** @internal */\n  _isMember(topic: string): boolean {\n    return this.topic === topic\n  }\n\n  /** @internal */\n  _joinRef(): string {\n    return this.joinPush.ref\n  }\n\n  /** @internal */\n  _trigger(type: string, payload?: any, ref?: string) {\n    const typeLower = type.toLocaleLowerCase()\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n      return\n    }\n    let handledPayload = this._onMessage(typeLower, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    if (['insert', 'update', 'delete'].includes(typeLower)) {\n      this.bindings.postgres_changes\n        ?.filter((bind) => {\n          return (\n            bind.filter?.event === '*' ||\n            bind.filter?.event?.toLocaleLowerCase() === typeLower\n          )\n        })\n        .map((bind) => bind.callback(handledPayload, ref))\n    } else {\n      this.bindings[typeLower]\n        ?.filter((bind) => {\n          if (\n            ['broadcast', 'presence', 'postgres_changes'].includes(typeLower)\n          ) {\n            if ('id' in bind) {\n              const bindId = bind.id\n              const bindEvent = bind.filter?.event\n              return (\n                bindId &&\n                payload.ids?.includes(bindId) &&\n                (bindEvent === '*' ||\n                  bindEvent?.toLocaleLowerCase() ===\n                    payload.data?.type.toLocaleLowerCase())\n              )\n            } else {\n              const bindEvent = bind?.filter?.event?.toLocaleLowerCase()\n              return (\n                bindEvent === '*' ||\n                bindEvent === payload?.event?.toLocaleLowerCase()\n              )\n            }\n          } else {\n            return bind.type.toLocaleLowerCase() === typeLower\n          }\n        })\n        .map((bind) => {\n          if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n            const postgresChanges = handledPayload.data\n            const { schema, table, commit_timestamp, type, errors } =\n              postgresChanges\n            const enrichedPayload = {\n              schema: schema,\n              table: table,\n              commit_timestamp: commit_timestamp,\n              eventType: type,\n              new: {},\n              old: {},\n              errors: errors,\n            }\n            handledPayload = {\n              ...enrichedPayload,\n              ...this._getPayloadRecords(postgresChanges),\n            }\n          }\n          bind.callback(handledPayload, ref)\n        })\n    }\n  }\n\n  /** @internal */\n  _isClosed(): boolean {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /** @internal */\n  _isJoined(): boolean {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /** @internal */\n  _isJoining(): boolean {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /** @internal */\n  _isLeaving(): boolean {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  /** @internal */\n  _replyEventName(ref: string): string {\n    return `chan_reply_${ref}`\n  }\n\n  /** @internal */\n  _on(type: string, filter: { [key: string]: any }, callback: Function) {\n    const typeLower = type.toLocaleLowerCase()\n\n    const binding = {\n      type: typeLower,\n      filter: filter,\n      callback: callback,\n    }\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower].push(binding)\n    } else {\n      this.bindings[typeLower] = [binding]\n    }\n\n    return this\n  }\n\n  /** @internal */\n  _off(type: string, filter: { [key: string]: any }) {\n    const typeLower = type.toLocaleLowerCase()\n\n    this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n      return !(\n        bind.type?.toLocaleLowerCase() === typeLower &&\n        RealtimeChannel.isEqual(bind.filter, filter)\n      )\n    })\n    return this\n  }\n\n  /** @internal */\n  private static isEqual(\n    obj1: { [key: string]: string },\n    obj2: { [key: string]: string }\n  ) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /** @internal */\n  private _rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this._rejoin()\n    }\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel closes.\n   *\n   * @internal\n   */\n  private _onClose(callback: Function) {\n    this._on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel encounteres an error.\n   *\n   * @internal\n   */\n  private _onError(callback: Function) {\n    this._on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  /**\n   * Returns `true` if the socket is connected and the channel has been joined.\n   *\n   * @internal\n   */\n  private _canPush(): boolean {\n    return this.socket.isConnected() && this._isJoined()\n  }\n\n  /** @internal */\n  private _rejoin(timeout = this.timeout): void {\n    if (this._isLeaving()) {\n      return\n    }\n    this.socket._leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /** @internal */\n  private _getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(\n        payload.columns,\n        payload.record\n      )\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(\n        payload.columns,\n        payload.old_record\n      )\n    }\n\n    return records\n  }\n}\n","import { w3cwebsocket } from 'websocket'\nimport {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n  CONNECTION_STATE,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport Serializer from './lib/serializer'\nimport RealtimeChannel from './RealtimeChannel'\nimport type { RealtimeChannelOptions } from './RealtimeChannel'\n\nexport type RealtimeClientOptions = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: any }\n}\n\nexport type RealtimeMessage = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\nexport type RealtimeRemoveChannelResponse = 'ok' | 'timed out' | 'error'\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: RealtimeChannel[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = w3cwebsocket\n  heartbeatIntervalMs: number = 30000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n  eventsPerSecondLimitMs: number = 100\n  inThrottle: boolean = false\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: RealtimeClientOptions) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n\n    const eventsPerSecond = options?.params?.eventsPerSecond\n    if (eventsPerSecond)\n      this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond)\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this._endPointURL(), [], null, this.headers)\n\n    if (this.conn) {\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error as ErrorEvent)\n      this.conn.onmessage = (event) => this._onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(code?: number, reason?: string): void {\n    if (this.conn) {\n      this.conn.onclose = function () {} // noop\n      if (code) {\n        this.conn.close(code, reason ?? '')\n      } else {\n        this.conn.close()\n      }\n      this.conn = null\n      // remove open handles\n      this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n      this.reconnectTimer.reset()\n    }\n  }\n\n  /**\n   * Returns all created channels\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.channels\n  }\n\n  /**\n   * Unsubscribes and removes a single channel\n   * @param channel A RealtimeChannel instance\n   */\n  async removeChannel(\n    channel: RealtimeChannel\n  ): Promise<RealtimeRemoveChannelResponse> {\n    const status = await channel.unsubscribe()\n    if (this.channels.length === 0) {\n      this.disconnect()\n    }\n    return status\n  }\n\n  /**\n   * Unsubscribes and removes all channels\n   */\n  async removeAllChannels(): Promise<RealtimeRemoveChannelResponse[]> {\n    const values_1 = await Promise.all(\n      this.channels.map((channel) => channel.unsubscribe())\n    )\n    this.disconnect()\n    return values_1\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overridden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Returns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  channel(\n    topic: string,\n    params: RealtimeChannelOptions = { config: {} }\n  ): RealtimeChannel {\n    if (!this.isConnected()) {\n      this.connect()\n    }\n\n    const chan = new RealtimeChannel(`realtime:${topic}`, params, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: RealtimeMessage): 'rate limited' | void {\n    const { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n        const isThrottled = this._throttle(callback)()\n        if (isThrottled) {\n          return 'rate limited'\n        }\n      } else {\n        callback()\n      }\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null): void {\n    this.accessToken = token\n\n    this.channels.forEach((channel) => {\n      token && channel.updateJoinPayload({ access_token: token })\n\n      if (channel.joinedOnce && channel._isJoined()) {\n        channel._push(CHANNEL_EVENTS.access_token, { access_token: token })\n      }\n    })\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   *\n   * @internal\n   */\n  _makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   *\n   * @internal\n   */\n  _leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c._isJoined() || c._isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   *\n   * @internal\n   */\n  _remove(channel: RealtimeChannel) {\n    this.channels = this.channels.filter(\n      (c: RealtimeChannel) => c._joinRef() !== channel._joinRef()\n    )\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   *\n   * @internal\n   */\n  private _endPointURL(): string {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /** @internal */\n  private _onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: RealtimeMessage) => {\n      let { topic, event, payload, ref } = msg\n\n      if (\n        (ref && ref === this.pendingHeartbeatRef) ||\n        event === payload?.type\n      ) {\n        this.pendingHeartbeatRef = null\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeChannel) => channel._isMember(topic))\n        .forEach((channel: RealtimeChannel) =>\n          channel._trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /** @internal */\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this._endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  /** @internal */\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  /** @internal */\n  private _onConnError(error: ErrorEvent) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  /** @internal */\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeChannel) =>\n      channel._trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  /** @internal */\n  private _appendParams(\n    url: string,\n    params: { [key: string]: string }\n  ): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  /** @internal */\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n  /** @internal */\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this._makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n\n  /** @internal */\n  private _throttle(\n    callback: Function,\n    eventsPerSecondLimitMs: number = this.eventsPerSecondLimitMs\n  ): () => boolean {\n    return () => {\n      if (this.inThrottle) return true\n\n      callback()\n\n      if (eventsPerSecondLimitMs > 0) {\n        this.inThrottle = true\n\n        setTimeout(() => {\n          this.inThrottle = false\n        }, eventsPerSecondLimitMs)\n      }\n\n      return false\n    }\n  }\n}\n","export class StorageError extends Error {\n  protected __isStorageError = true\n\n  constructor(message: string) {\n    super(message)\n    this.name = 'StorageError'\n  }\n}\n\nexport function isStorageError(error: unknown): error is StorageError {\n  return typeof error === 'object' && error !== null && '__isStorageError' in error\n}\n\nexport class StorageApiError extends StorageError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message)\n    this.name = 'StorageApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class StorageUnknownError extends StorageError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'StorageUnknownError'\n    this.originalError = originalError\n  }\n}\n","type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveResponse = async () => {\n  if (typeof Response === 'undefined') {\n    return (await import('cross-fetch')).Response\n  }\n\n  return Response\n}\n","import { StorageApiError, StorageUnknownError } from './errors'\nimport { resolveResponse } from './helpers'\nimport { FetchParameters } from './types'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const Res = await resolveResponse()\n\n  if (error instanceof Res) {\n    error\n      .json()\n      .then((err) => {\n        reject(new StorageApiError(_getErrorMessage(err), error.status || 500))\n      })\n      .catch((err) => {\n        reject(new StorageUnknownError(_getErrorMessage(err), err))\n      })\n  } else {\n    reject(new StorageUnknownError(_getErrorMessage(error), error))\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n","import { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport {\n  FileObject,\n  FileOptions,\n  SearchOptions,\n  FetchParameters,\n  TransformOptions,\n} from '../lib/types'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\ntype FileBody =\n  | ArrayBuffer\n  | ArrayBufferView\n  | Blob\n  | Buffer\n  | File\n  | FormData\n  | NodeJS.ReadableStream\n  | ReadableStream<Uint8Array>\n  | URLSearchParams\n  | string\n\nexport default class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const res = await this.fetch(`${this.url}/object/${_path}`, {\n        method,\n        body: body as BodyInit,\n        headers,\n        ...(options?.duplex ? { duplex: options.duplex } : {}),\n      })\n\n      if (res.ok) {\n        return {\n          data: { path: cleanPath },\n          error: null,\n        }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async upload(\n    path: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Upload a file with a token generated from `createSignedUploadUrl`.\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param token The token generated from `createSignedUploadUrl`\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async uploadToSignedUrl(\n    path: string,\n    token: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ) {\n    const cleanPath = this._removeEmptyFolders(path)\n    const _path = this._getFinalPath(cleanPath)\n\n    const url = new URL(this.url + `/object/upload/sign/${_path}`)\n    url.searchParams.set('token', token)\n\n    try {\n      let body\n      const options = { upsert: DEFAULT_FILE_OPTIONS.upsert, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...{ 'x-upsert': String(options.upsert as boolean) },\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const res = await this.fetch(url.toString(), {\n        method: 'PUT',\n        body: body as BodyInit,\n        headers,\n      })\n\n      if (res.ok) {\n        return {\n          data: { path: cleanPath },\n          error: null,\n        }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed upload URL.\n   * Signed upload URLs can be used to upload files to the bucket without further authentication.\n   * They are valid for one minute.\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   */\n  async createSignedUploadUrl(\n    path: string\n  ): Promise<\n    | {\n        data: { signedUrl: string; token: string; path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/upload/sign/${_path}`,\n        {},\n        { headers: this.headers }\n      )\n\n      const url = new URL(this.url + data.url)\n\n      const token = url.searchParams.get('token')\n\n      if (!token) {\n        throw new StorageError('No token returned by API')\n      }\n\n      return { data: { signedUrl: url.toString(), path, token }, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   */\n  async move(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Copies an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data: { path: data.Key }, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: { signedUrl: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn, ...(options?.transform ? { transform: options.transform } : {}) },\n        { headers: this.headers }\n      )\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`)\n      data = { signedUrl }\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number,\n    options?: { download: string | boolean }\n  ): Promise<\n    | {\n        data: { error: string | null; path: string | null; signedUrl: string }[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedUrl: datum.signedURL\n            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n            : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n   *\n   * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async download(\n    path: string,\n    options?: { transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: Blob\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n    const queryString = transformationQuery ? `?${transformationQuery}` : ''\n\n    try {\n      const _path = this._getFinalPath(path)\n      const res = await get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n      const data = await res.blob()\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n   * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n   *\n   * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n   * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  getPublicUrl(\n    path: string,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): { data: { publicUrl: string } } {\n    const _path = this._getFinalPath(path)\n    const _queryString = []\n\n    const downloadQueryParam = options?.download\n      ? `download=${options.download === true ? '' : options.download}`\n      : ''\n\n    if (downloadQueryParam !== '') {\n      _queryString.push(downloadQueryParam)\n    }\n\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n\n    if (transformationQuery !== '') {\n      _queryString.push(transformationQuery)\n    }\n\n    let queryString = _queryString.join('&')\n    if (queryString !== '') {\n      queryString = `?${queryString}`\n    }\n\n    return {\n      data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n   */\n  async remove(\n    paths: string[]\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(\n  //   id: string\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await post(\n  //       this.fetch,\n  //       `${this.url}/metadata/${id}`,\n  //       { ...meta },\n  //       { headers: this.headers }\n  //     )\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Lists all the files within a bucket.\n   * @param path The folder path.\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private _getFinalPath(path: string) {\n    return `${this.bucketId}/${path}`\n  }\n\n  private _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n\n  private transformOptsToQueryString(transform: TransformOptions) {\n    const params = []\n    if (transform.width) {\n      params.push(`width=${transform.width}`)\n    }\n\n    if (transform.height) {\n      params.push(`height=${transform.height}`)\n    }\n\n    if (transform.resize) {\n      params.push(`resize=${transform.resize}`)\n    }\n\n    if (transform.format) {\n      params.push(`format=${transform.format}`)\n    }\n\n    if (transform.quality) {\n      params.push(`quality=${transform.quality}`)\n    }\n\n    return params.join('&')\n  }\n}\n","import { DEFAULT_HEADERS } from '../lib/constants'\nimport { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, put, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport { Bucket } from '../lib/types'\n\nexport default class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  async listBuckets(): Promise<\n    | {\n        data: Bucket[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(\n    id: string\n  ): Promise<\n    | {\n        data: Bucket\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n   * The global file size limit takes precedence over this value.\n   * The default value is null, which doesn't set a per bucket file size limit.\n   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n   * The default value is null, which allows files with all mime types to be uploaded.\n   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n   * @returns newly created bucket id\n   */\n  async createBucket(\n    id: string,\n    options: {\n      public: boolean\n      fileSizeLimit?: number | string | null\n      allowedMimeTypes?: string[] | null\n    } = {\n      public: false,\n    }\n  ): Promise<\n    | {\n        data: Pick<Bucket, 'name'>\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        {\n          id,\n          name: id,\n          public: options.public,\n          file_size_limit: options.fileSizeLimit,\n          allowed_mime_types: options.allowedMimeTypes,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates a Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n   * The global file size limit takes precedence over this value.\n   * The default value is null, which doesn't set a per bucket file size limit.\n   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n   * The default value is null, which allows files with all mime types to be uploaded.\n   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n   */\n  async updateBucket(\n    id: string,\n    options: {\n      public: boolean\n      fileSizeLimit?: number | string | null\n      allowedMimeTypes?: string[] | null\n    }\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {\n          id,\n          name: id,\n          public: options.public,\n          file_size_limit: options.fileSizeLimit,\n          allowed_mime_types: options.allowedMimeTypes,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","import StorageFileApi from './packages/StorageFileApi'\nimport StorageBucketApi from './packages/StorageBucketApi'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n","import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","import { supportsLocalStorage } from './helpers'\nimport { SupportedStorage } from './types'\n\nconst localStorageAdapter: SupportedStorage = {\n  getItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return null\n    }\n\n    return globalThis.localStorage.getItem(key)\n  },\n  setItem: (key, value) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.setItem(key, value)\n  },\n  removeItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.removeItem(key)\n  },\n}\n\nexport default localStorageAdapter\n","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n","import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthInvalidCredentialsError,\n  AuthRetryableFetchError,\n  AuthSessionMissingError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n} from './lib/errors'\nimport { Fetch, _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  getParameterByName,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n  generatePKCEVerifier,\n  generatePKCEChallenge,\n} from './lib/helpers'\nimport localStorageAdapter from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\n\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n  ResendParams,\n  AuthFlowType,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  /**\n   * The session object for the currently logged in user. If null, it means there isn't a logged-in user.\n   * Only used if persistSession is false.\n   */\n  protected inMemorySession: Session | null\n\n  protected flowType: AuthFlowType\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.inMemorySession = null\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.storage = settings.storage || localStorageAdapter\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', (event) => {\n        this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  initialize(): Promise<InitializeResult> {\n    if (!this.initializePromise) {\n      this.initializePromise = this._initialize()\n    }\n\n    return this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return this.initializePromise\n    }\n\n    try {\n      const isPKCEFlow = await this._isPKCEFlow()\n      if ((this.detectSessionInUrl && this._isImplicitGrantFlow()) || isPKCEFlow) {\n        const { data, error } = await this._getSessionFromUrl(isPKCEFlow)\n        if (error) {\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        await this._saveSession(session)\n\n        setTimeout(() => {\n          if (redirectType === 'recovery') {\n            this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n          } else {\n            this._notifyAllSubscribers('SIGNED_IN', session)\n          }\n        }, 0)\n\n        return { error: null }\n      }\n\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(credentials: SignInWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    await this._removeSession()\n\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthResponse> {\n    const codeVerifier = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const { data, error } = await _request(\n      this.fetch,\n      'POST',\n      `${this.url}/token?grant_type=pkce`,\n      {\n        headers: this.headers,\n        body: {\n          auth_code: authCode,\n          code_verifier: codeVerifier,\n        },\n        xform: _sessionResponse,\n      }\n    )\n    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    if (error || !data) return { data: { user: null, session: null }, error }\n    if (data.session) {\n      await this._saveSession(data.session)\n      this._notifyAllSubscribers('SIGNED_IN', data.session)\n    }\n    return { data, error }\n  }\n\n  /**\n   * Allows signing in with an ID token issued by certain supported providers.\n   * The ID token is verified for validity and a new session is established.\n   *\n   * @experimental\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthResponse> {\n    await this._removeSession()\n\n    try {\n      const { options, provider, token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: params.options?.captchaToken },\n        },\n        redirectTo: params.options?.redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      await this._removeSession()\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    try {\n      const {\n        data: { session },\n        error: sessionError,\n      } = await this.getSession()\n      if (sessionError) throw sessionError\n      if (!session) throw new AuthSessionMissingError()\n\n      const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n        headers: this.headers,\n        jwt: session.access_token,\n      })\n      return { data: { user: null, session: null }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   */\n  async getSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    // make sure we've read the session from the url if there is one\n    // save to just await, as long we make sure _initialize() never throws\n    await this.initializePromise\n\n    let currentSession: Session | null = null\n\n    if (this.persistSession) {\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          await this._removeSession()\n        }\n      }\n    } else {\n      currentSession = this.inMemorySession\n    }\n\n    if (!currentSession) {\n      return { data: { session: null }, error: null }\n    }\n\n    const hasExpired = currentSession.expires_at\n      ? currentSession.expires_at <= Date.now() / 1000\n      : false\n    if (!hasExpired) {\n      return { data: { session: currentSession }, error: null }\n    }\n\n    const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n    if (error) {\n      return { data: { session: null }, error }\n    }\n\n    return { data: { session }, error: null }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session.\n   * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (!jwt) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        // Default to Authorization header if there is no existing session\n        jwt = data.session?.access_token ?? undefined\n      }\n\n      return await _request(this.fetch, 'GET', `${this.url}/user`, {\n        headers: this.headers,\n        jwt: jwt,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        throw sessionError\n      }\n      if (!sessionData.session) {\n        throw new AuthSessionMissingError()\n      }\n      const session: Session = sessionData.session\n      const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n        headers: this.headers,\n        redirectTo: options?.emailRedirectTo,\n        body: attributes,\n        jwt: session.access_token,\n        xform: _userResponse,\n      })\n      if (userError) throw userError\n      session.user = data.user as User\n      await this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED', session)\n\n      return { data: { user: session.user }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this.getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    try {\n      if (!currentSession) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        currentSession = data.session ?? undefined\n      }\n\n      if (!currentSession?.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      if (!session) {\n        return { data: { user: null, session: null }, error: null }\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromUrl(isPKCEFlow: boolean): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      } else if (this.flowType == 'pkce' && !isPKCEFlow) {\n        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n      }\n      if (isPKCEFlow) {\n        const authCode = getParameterByName('code')\n        if (!authCode) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this.exchangeCodeForSession(authCode)\n        if (error) throw error\n        if (!data.session) throw new AuthPKCEGrantCodeExchangeError('No session detected.')\n        let url = new URL(window.location.href)\n        url.searchParams.delete('code')\n        window.history.replaceState(window.history.state, '', url.toString())\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) {\n        const error_code = getParameterByName('error_code')\n        if (!error_code) throw new AuthImplicitGrantRedirectError('No error_code detected.')\n        const error = getParameterByName('error')\n        if (!error) throw new AuthImplicitGrantRedirectError('No error detected.')\n\n        throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code })\n      }\n\n      const provider_token = getParameterByName('provider_token')\n      const provider_refresh_token = getParameterByName('provider_refresh_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new AuthImplicitGrantRedirectError('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new AuthImplicitGrantRedirectError('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new AuthImplicitGrantRedirectError('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new AuthImplicitGrantRedirectError('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { data, error } = await this.getUser(access_token)\n      if (error) throw error\n      const user: User = data.user\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user,\n      }\n      const redirectType = getParameterByName('type')\n\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: { session, redirectType }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    return (\n      isBrowser() &&\n      (Boolean(getParameterByName('access_token')) ||\n        Boolean(getParameterByName('error_description')))\n    )\n  }\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCEFlow(): Promise<boolean> {\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n    return isBrowser() && Boolean(getParameterByName('code')) && Boolean(currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   */\n  async signOut(): Promise<{ error: AuthError | null }> {\n    const { data, error: sessionError } = await this.getSession()\n    if (sessionError) {\n      return { error: sessionError }\n    }\n    const accessToken = data.session?.access_token\n    if (accessToken) {\n      const { error } = await this.admin.signOut(accessToken)\n      if (error) {\n        // ignore 404s since user might not exist anymore\n        // ignore 401s since an invalid or expired JWT should sign out the current session\n        if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n          return { error }\n        }\n      }\n    }\n    await this._removeSession()\n    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    this._notifyAllSubscribers('SIGNED_OUT', null)\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this.stateChangeEmitters.set(id, subscription)\n\n    this.emitInitialSession(id)\n\n    return { data: { subscription } }\n  }\n\n  private async emitInitialSession(id: string): Promise<void> {\n    try {\n      const {\n        data: { session },\n        error,\n      } = await this.getSession()\n      if (error) throw error\n\n      this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n    } catch (err) {\n      this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n      console.error(err)\n    }\n  }\n\n  /**\n   * Sends a password reset request to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      codeChallenge = await generatePKCEChallenge(codeVerifier)\n      codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          await sleep(attempt * 200) // 0, 200, 400, 800, ...\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, _, result) =>\n          result &&\n          result.error &&\n          result.error instanceof AuthRetryableFetchError &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      if (!this._isValidSession(currentSession)) {\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if ((currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.log(error.message)\n            await this._removeSession()\n          }\n        }\n      } else {\n        if (this.persistSession) {\n          await this._saveSession(currentSession)\n        }\n        this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      console.error(err)\n      return\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      if (!refreshToken) {\n        throw new AuthSessionMissingError()\n      }\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent, session: Session | null, broadcast = true) {\n    if (this.broadcastChannel && broadcast) {\n      this.broadcastChannel.postMessage({ event, session })\n    }\n\n    this.stateChangeEmitters.forEach((x) => x.callback(event, session))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    if (!this.persistSession) {\n      this.inMemorySession = session\n    }\n\n    if (this.persistSession && session.expires_at) {\n      await this._persistSession(session)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    return setItemAsync(this.storage, this.storageKey, currentSession)\n  }\n\n  private async _removeSession() {\n    if (this.persistSession) {\n      await removeItemAsync(this.storage, this.storageKey)\n    } else {\n      this.inMemorySession = null\n    }\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-ignore\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-ignore\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately\n    await this._autoRefreshTokenTick()\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desireable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    const now = Date.now()\n\n    try {\n      const {\n        data: { session },\n      } = await this.getSession()\n\n      if (!session || !session.refresh_token || !session.expires_at) {\n        return\n      }\n\n      // session will expire in this many ticks (or has already expired if <= 0)\n      const expiresInTicks = Math.floor(\n        (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n      )\n\n      if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n        await this._callRefreshToken(session.refresh_token)\n      }\n    } catch (e: any) {\n      console.error('Auto refresh tick failed with error. This is likely a transient error.', e)\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(isInitial: boolean) {\n    if (document.visibilityState === 'visible') {\n      if (!isInitial) {\n        // initial visibility change setup is handled in another flow under #initialize()\n        await this.initializePromise\n        await this._recoverAndRefresh()\n      }\n\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      const codeChallenge = await generatePKCEChallenge(codeVerifier)\n      const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n        body: {\n          friendly_name: params.friendlyName,\n          factor_type: params.factorType,\n          issuer: params.issuer,\n        },\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n\n      if (error) {\n        return { data: null, error }\n      }\n\n      if (data?.totp?.qr_code) {\n        data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/verify`,\n        {\n          body: { code: params.code, challenge_id: params.challengeId },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n      if (error) {\n        return { data: null, error }\n      }\n\n      await this._saveSession({\n        expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n        ...data,\n      })\n      this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/challenge`,\n        {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    const {\n      data: { session },\n      error: sessionError,\n    } = await this.getSession()\n    if (sessionError) {\n      return { data: null, error: sessionError }\n    }\n    if (!session) {\n      return {\n        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n        error: null,\n      }\n    }\n\n    const payload = this._decodeJWT(session.access_token)\n\n    let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n    if (payload.aal) {\n      currentLevel = payload.aal\n    }\n\n    let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n    const verifiedFactors =\n      session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n    if (verifiedFactors.length > 0) {\n      nextLevel = 'aal2'\n    }\n\n    const currentAuthenticationMethods = payload.amr || []\n\n    return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n  }\n}\n","import { GoTrueClient } from '@supabase/gotrue-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends GoTrueClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n","import { FunctionsClient } from '@supabase/functions-js'\nimport { AuthChangeEvent } from '@supabase/gotrue-js'\nimport {\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n} from '@supabase/postgrest-js'\nimport {\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeClient,\n  RealtimeClientOptions,\n} from '@supabase/realtime-js'\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js'\nimport { DEFAULT_HEADERS } from './lib/constants'\nimport { fetchWithAuth } from './lib/fetch'\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { Fetch, GenericSchema, SupabaseClientOptions, SupabaseAuthClientOptions } from './lib/types'\n\nconst DEFAULT_GLOBAL_OPTIONS = {\n  headers: DEFAULT_HEADERS,\n}\n\nconst DEFAULT_DB_OPTIONS = {\n  schema: 'public',\n}\n\nconst DEFAULT_AUTH_OPTIONS: SupabaseAuthClientOptions = {\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  flowType: 'implicit',\n}\n\nconst DEFAULT_REALTIME_OPTIONS: RealtimeClientOptions = {}\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n  realtime: RealtimeClient\n\n  protected realtimeUrl: string\n  protected authUrl: string\n  protected storageUrl: string\n  protected functionsUrl: string\n  protected rest: PostgrestClient<Database, SchemaName>\n  protected storageKey: string\n  protected fetch?: Fetch\n  protected changedAccessToken: string | undefined\n\n  protected headers: {\n    [key: string]: string\n  }\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.global.fetch A custom fetch implementation.\n   * @param options.global.headers Any additional headers to send with each network request.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions<SchemaName>\n  ) {\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.')\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl)\n\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws')\n    this.authUrl = `${_supabaseUrl}/auth/v1`\n    this.storageUrl = `${_supabaseUrl}/storage/v1`\n\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/)\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.')\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`\n    }\n    // default storage key uses the supabase project ref as a namespace\n    const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`\n    const DEFAULTS = {\n      db: DEFAULT_DB_OPTIONS,\n      realtime: DEFAULT_REALTIME_OPTIONS,\n      auth: { ...DEFAULT_AUTH_OPTIONS, storageKey: defaultStorageKey },\n      global: DEFAULT_GLOBAL_OPTIONS,\n    }\n\n    const settings = applySettingDefaults(options ?? {}, DEFAULTS)\n\n    this.storageKey = settings.auth?.storageKey ?? ''\n    this.headers = settings.global?.headers ?? {}\n\n    this.auth = this._initSupabaseAuthClient(\n      settings.auth ?? {},\n      this.headers,\n      settings.global?.fetch\n    )\n    this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global?.fetch)\n\n    this.realtime = this._initRealtimeClient({ headers: this.headers, ...settings.realtime })\n    this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n      headers: this.headers,\n      schema: settings.db?.schema,\n      fetch: this.fetch,\n    })\n\n    this._listenForAuthEvents()\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this.headers,\n      customFetch: this.fetch,\n    })\n  }\n\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch)\n  }\n\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    return this.rest.from(relation)\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    options?: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    return this.rest.rpc(fn, args, options)\n  }\n\n  /**\n   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n   *\n   * @param {string} name - The name of the Realtime channel.\n   * @param {Object} opts - The options to pass to the Realtime channel.\n   *\n   */\n  channel(name: string, opts: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    return this.realtime.channel(name, opts)\n  }\n\n  /**\n   * Returns all Realtime channels.\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.realtime.getChannels()\n  }\n\n  /**\n   * Unsubscribes and removes Realtime channel from Realtime client.\n   *\n   * @param {RealtimeChannel} channel - The name of the Realtime channel.\n   *\n   */\n  removeChannel(channel: RealtimeChannel): Promise<'ok' | 'timed out' | 'error'> {\n    return this.realtime.removeChannel(channel)\n  }\n\n  /**\n   * Unsubscribes and removes all Realtime channels from Realtime client.\n   */\n  removeAllChannels(): Promise<('ok' | 'timed out' | 'error')[]> {\n    return this.realtime.removeAllChannels()\n  }\n\n  private async _getAccessToken() {\n    const { data } = await this.auth.getSession()\n\n    return data.session?.access_token ?? null\n  }\n\n  private _initSupabaseAuthClient(\n    {\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      storageKey,\n      flowType,\n    }: SupabaseAuthClientOptions,\n    headers?: Record<string, string>,\n    fetch?: Fetch\n  ) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: { ...authHeaders, ...headers },\n      storageKey: storageKey,\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      flowType,\n      fetch,\n    })\n  }\n\n  private _initRealtimeClient(options: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl, {\n      ...options,\n      params: { ...{ apikey: this.supabaseKey }, ...options?.params },\n    })\n  }\n\n  private _listenForAuthEvents() {\n    let data = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session?.access_token, 'CLIENT')\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    token: string | undefined,\n    source: 'CLIENT' | 'STORAGE'\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      // Token has changed\n      this.realtime.setAuth(token ?? null)\n\n      this.changedAccessToken = token\n    } else if (event === 'SIGNED_OUT') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey)\n      if (source == 'STORAGE') this.auth.signOut()\n      this.changedAccessToken = undefined\n    }\n  }\n}\n","import { createClient } from \"@supabase/supabase-js\";\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient(\n  \"https://bnpndeyqgieoapeqhfll.supabase.co\",\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJucG5kZXlxZ2llb2FwZXFoZmxsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODUxMDI3NDMsImV4cCI6MjAwMDY3ODc0M30.hwODZJIC_b-mV5gW4QKgiLVkYUa6dR-Epg8XlT4JCzI\",\n  {\n    realtime: {\n      params: {\n        eventsPerSecond: 10,\n      },\n    },\n  }\n);\n\nexport async function newVisitor(channelName: string | undefined | null) {\n  const { data, error } = await supabase.auth.getSession();\n  if (data.session?.user) {\n    const channel = supabase.channel(\n      channelName || (data.session.user.email as string),\n      {\n        config: { broadcast: { ack: true, self: true } },\n      }\n    );\n    channel.subscribe((...args) => {\n      console.log(\"channel\", args);\n    });\n    return { user: data.session.user, channel };\n  } else {\n    supabase.auth.signInWithOAuth({\n      provider: \"google\",\n      options: {\n        redirectTo: \"https://bnpndeyqgieoapeqhfll.supabase.co/auth/v1/callback\",\n      },\n    });\n  }\n\n  // return supabase.from(\"visitors\").insert({ name }).select();\n}\n","import { RealtimeChannel } from \"@supabase/supabase-js\";\nimport * as telemetry from \"./telemetry\";\n\nlet channel: RealtimeChannel | null = null;\ntelemetry\n  .newVisitor(localStorage.getItem(\"channelName\"))\n  .then(({ user, channel: nchannel }) => {\n    console.log(\"user\", user);\n    channel = nchannel as RealtimeChannel;\n    channel.on(\"broadcast\", { event: \"telemetry\" }, (payload) => {\n      console.log(\"channel broadcat telemetry\", payload);\n    });\n    channel.on(\"presence\", { event: \"sync\" }, () => {\n      console.log(\"Online users: \", channel.presenceState());\n    });\n\n    channel.on(\"presence\", { event: \"join\" }, ({ newPresences }) => {\n      console.log(\"New users have joined: \", newPresences);\n    });\n\n    channel.on(\"presence\", { event: \"leave\" }, ({ leftPresences }) => {\n      console.log(\"Users have left: \", leftPresences);\n    });\n  })\n  .catch(console.log);\n\nexport function send(eventType: string, event: Record<string, unknown>) {\n  if (channel) {\n    channel.send({\n      type: \"broadcast\",\n      event: eventType,\n      ...event,\n    });\n  }\n}\n","import { send } from \"./send\";\n\nlet isStartedRecording = false;\nfunction startRecording(timeStamp: number) {\n  if (!isStartedRecording) {\n    isStartedRecording = true;\n    send(\"start\", {\n      time: timeStamp || new Date().valueOf() - NOW,\n      viewport: {\n        width: visualViewport.width,\n        height: visualViewport.height,\n        scale: visualViewport.scale,\n      },\n      mediaQueries: !window.matchMedia\n        ? null\n        : {\n            prefers_reduced_motion: window.matchMedia(\n              \"(prefers-reduced-motion: reduce)\"\n            ).matches,\n            update: {\n              fast: window.matchMedia(\"(update: fast)\").matches,\n              slow: window.matchMedia(\"(update: slow)\").matches,\n            },\n            prefers_contrast: {\n              more: window.matchMedia(\"(prefers-contrast: more)\").matches,\n              less: window.matchMedia(\"(prefers-contrast: less)\").matches,\n            },\n            pointer: {\n              coarse: window.matchMedia(\"(pointer: coarse)\").matches,\n              fine: window.matchMedia(\"(pointer: fine)\").matches,\n            },\n            display_mode: {\n              fullscreen: window.matchMedia(\"(display-mode: fullscreen)\")\n                .matches,\n              standalone: window.matchMedia(\"(display-mode: standalone)\")\n                .matches,\n              minimal_ui: window.matchMedia(\"(display-mode: minimal-ui)\")\n                .matches,\n              browser: window.matchMedia(\"(display-mode: browser)\").matches,\n            },\n          },\n      devicePixelRatio: window.devicePixelRatio,\n      ui: {\n        menubar: window.menubar?.visible,\n        toolbar: window.toolbar?.visible,\n        locationbar: window.locationbar?.visible,\n        scrollbars: window.scrollbars?.visible,\n      },\n    });\n  }\n}\ndocument.addEventListener(\"readystatechange\", function (ev) {\n  startRecording(ev.timeStamp);\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function (ev) {\n  startRecording(ev.timeStamp);\n});\n","import { send } from \"./send\";\nimport { NOW } from \"./NOW\";\n\ntype XYZ<T> = { x: T; y: T; z: T };\ntype ThreeDPosition = { time: null } | ({ time: number } & XYZ<number | null>);\n\nlet accelerationIncludingGravity: ThreeDPosition = { time: null };\nlet totalAcceleration: { time: null | number } & XYZ<number> = {\n  time: null,\n  x: 0,\n  y: 0,\n  z: 0,\n};\nwindow.addEventListener(\"devicemotion\", (ev) => {\n  {\n    const acc = ev.accelerationIncludingGravity;\n    if (acc) {\n      accelerationIncludingGravity = {\n        time: ev.timeStamp || new Date().valueOf() - NOW,\n        x: acc.x,\n        y: acc.y,\n        z: acc.z,\n      };\n    }\n  }\n  {\n    const acc = ev.acceleration;\n    if (acc) {\n      totalAcceleration = {\n        time: ev.timeStamp || new Date().valueOf() - NOW,\n        x: totalAcceleration.x + Math.abs(acc.x || 0),\n        y: totalAcceleration.y + Math.abs(acc.y || 0),\n        z: totalAcceleration.z + Math.abs(acc.z || 0),\n      };\n    }\n  }\n});\n\nsetInterval(() => {\n  if (\n    accelerationIncludingGravity.time != null ||\n    totalAcceleration.time != null\n  ) {\n    send(\"acceleration\", {\n      accelerationIncludingGravity,\n      totalAcceleration,\n    });\n  }\n}, 500);\n","import { NOW } from \"./NOW\";\nimport \"./style.css\";\nimport { log } from \"./log\";\nimport \"./header\";\nimport { send } from \"./send\";\nimport \"./start\";\nimport \"./devicemotion\";\n\ntype TwoDCoordinate = {\n  x: number;\n  y: number;\n};\ntype MouseCoordinates = {\n  screen: TwoDCoordinate;\n  page: TwoDCoordinate;\n  client: TwoDCoordinate;\n  offset: TwoDCoordinate;\n};\ntype LastTwoDCoordinateEvent =\n  | {\n      time: null;\n    }\n  | ({\n      time: number;\n    } & MouseCoordinates);\n\ntype LastMoveMouseEvent =\n  | { time: null }\n  | ({\n      time: number;\n      totalMouseMovement: { x: number; y: number };\n    } & MouseCoordinates);\n\ntype LastTouchEvent =\n  | {\n      time: null;\n    }\n  | {\n      time: number;\n      screen: TwoDCoordinate;\n      page: TwoDCoordinate;\n      client: TwoDCoordinate;\n      radius: TwoDCoordinate;\n      force: number;\n      rotationAngle: number;\n      identifier: number;\n    };\n\nlet touchStart: LastTouchEvent = {\n  time: null,\n};\n\nlet touchMove: LastTouchEvent = {\n  time: null,\n};\n\nlet touchEnd: LastTouchEvent = {\n  time: null,\n};\n\nlet isTouchStarted = false;\nlet isMouseDown = false;\nlet touchMoveStats: null | {\n  radius: {\n    max: TwoDCoordinate;\n    min: TwoDCoordinate;\n  };\n  force: {\n    max: number;\n    min: number;\n  };\n} = null;\n\nlet mousedown: LastTwoDCoordinateEvent = {\n  time: null,\n};\nlet mouseup: LastTwoDCoordinateEvent = {\n  time: null,\n};\nlet mousemove: LastTwoDCoordinateEvent = {\n  time: null,\n};\nfunction onMouseEvent({\n  mousedown,\n  mousemove,\n  mouseup,\n}: {\n  mousedown?: LastTwoDCoordinateEvent;\n  mousemove?: LastMoveMouseEvent;\n  mouseup?: LastTwoDCoordinateEvent;\n}) {\n  send(\"mouseClick\", {\n    down: mousedown,\n    move: mousemove,\n    up: mouseup,\n  });\n}\n\ndocument.addEventListener(\"mousedown\", (ev) => {\n  isMouseDown = true;\n  mouseup = {\n    time: null,\n  };\n  mousedown = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: ev.screenX,\n      y: ev.screenY,\n    },\n    page: {\n      x: ev.pageX,\n      y: ev.pageY,\n    },\n    offset: {\n      x: ev.offsetX,\n      y: ev.offsetY,\n    },\n    client: {\n      x: ev.clientX,\n      y: ev.clientY,\n    },\n  };\n});\n\nlet isMouseMoving = false;\nlet totalMouseMovement = {\n  x: 0,\n  y: 0,\n};\ndocument.addEventListener(\"mousemove\", (ev) => {\n  mousemove = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: ev.screenX,\n      y: ev.screenY,\n    },\n    page: {\n      x: ev.pageX,\n      y: ev.pageY,\n    },\n    offset: {\n      x: ev.offsetX,\n      y: ev.offsetY,\n    },\n    client: {\n      x: ev.clientX,\n      y: ev.clientY,\n    },\n  };\n  totalMouseMovement = {\n    x: totalMouseMovement.x + Math.abs(ev.movementX),\n    y: totalMouseMovement.y + Math.abs(ev.movementY),\n  };\n});\n\nsetInterval(() => {\n  if (mousemove.time != null) {\n    send(\"mousemove\", {\n      ...mousemove,\n      totalMouseMovement,\n    });\n    mousemove = {\n      time: null,\n    };\n  }\n  totalMouseMovement = {\n    x: 0,\n    y: 0,\n  };\n}, 500);\nsetInterval;\n\ndocument.addEventListener(\"mouseup\", (ev) => {\n  isMouseDown = false;\n  mouseup = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: ev.screenX,\n      y: ev.screenY,\n    },\n    page: {\n      x: ev.pageX,\n      y: ev.pageY,\n    },\n    offset: {\n      x: ev.offsetX,\n      y: ev.offsetY,\n    },\n    client: {\n      x: ev.clientX,\n      y: ev.clientY,\n    },\n  };\n  onMouseEvent({ mousedown, mouseup });\n  mousedown = {\n    time: null,\n  };\n});\n\nfunction onTouchCompleted(\n  touchStart: LastTouchEvent,\n  touchMove: LastTouchEvent,\n  touchEnd: LastTouchEvent\n) {\n  log(\n    JSON.stringify(\n      {\n        touchStart,\n        touchMove,\n        touchEnd,\n      },\n      null,\n      2\n    )\n  );\n  send(\"touchEnd\", {\n    start: touchStart,\n    end: touchEnd,\n  });\n}\n\ndocument.addEventListener(\"touchstart\", (ev) => {\n  isTouchStarted = true;\n  touchMove = {\n    time: null,\n  };\n  touchEnd = {\n    time: null,\n  };\n  const touch0 = ev.touches[0];\n  touchStart = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: touch0.screenX,\n      y: touch0.screenY,\n    },\n    page: {\n      x: touch0.pageX,\n      y: touch0.pageY,\n    },\n    radius: {\n      x: touch0.radiusX,\n      y: touch0.radiusX,\n    },\n    force: touch0.force,\n    rotationAngle: touch0.rotationAngle,\n    identifier: touch0.identifier,\n    client: {\n      x: touch0.clientX,\n      y: touch0.clientY,\n    },\n  };\n});\n\ndocument.addEventListener(\"touchmove\", (ev) => {\n  const touch0 = ev.touches[0];\n  touchMove = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: touch0.screenX,\n      y: touch0.screenY,\n    },\n    page: {\n      x: touch0.pageX,\n      y: touch0.pageY,\n    },\n    radius: {\n      x: touch0.radiusX,\n      y: touch0.radiusX,\n    },\n    force: touch0.force,\n    rotationAngle: touch0.rotationAngle,\n    identifier: touch0.identifier,\n    client: {\n      x: touch0.clientX,\n      y: touch0.clientY,\n    },\n  };\n});\n\ndocument.addEventListener(\"touchend\", (ev) => {\n  const touch0 = ev.changedTouches[0];\n  touchEnd = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    screen: {\n      x: touch0.screenX,\n      y: touch0.screenY,\n    },\n    page: {\n      x: touch0.pageX,\n      y: touch0.pageY,\n    },\n    radius: {\n      x: touch0.radiusX,\n      y: touch0.radiusX,\n    },\n    force: touch0.force,\n    rotationAngle: touch0.rotationAngle,\n    identifier: touch0.identifier,\n    client: {\n      x: touch0.clientX,\n      y: touch0.clientY,\n    },\n  };\n  isTouchStarted = false;\n  onTouchCompleted(touchStart, touchMove, touchEnd);\n  touchStart = { time: null };\n  touchMove = { time: null };\n});\n\ntype LastScrollEvent =\n  | { time: null }\n  | {\n      time: number;\n      scroll: TwoDCoordinate;\n    };\nlet scrollStart: LastScrollEvent = { time: null };\nlet scrollEnd: LastScrollEvent = { time: null };\nfunction onScrollCompleted(\n  scrollStart: LastScrollEvent,\n  scrollEnd: LastScrollEvent\n) {\n  log(\n    JSON.stringify(\n      {\n        scrollStart,\n        scrollEnd,\n      },\n      null,\n      2\n    )\n  );\n  send(\"scrollEnd\", {\n    start: scrollStart,\n    end: scrollEnd,\n  });\n}\ndocument.addEventListener(\"scroll\", (ev) => {\n  scrollEnd = { time: null };\n  scrollStart = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    scroll: {\n      x: window.scrollX,\n      y: window.scrollY,\n    },\n  };\n});\ndocument.addEventListener(\"scrollend\", (ev) => {\n  scrollEnd = {\n    time: ev.timeStamp || new Date().valueOf() - NOW,\n    scroll: {\n      x: window.scrollX,\n      y: window.scrollY,\n    },\n  };\n  onScrollCompleted(scrollStart, scrollEnd);\n  scrollStart = { time: null };\n});\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}